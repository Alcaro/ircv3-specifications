# IRC `BATCH` extension

Copyright (c) 2012 William Pitcock <nenolod@dereferenced.org>.
Copyright (c) 2014 Kythyria Tieran <kythyria@berigora.net>

Unlimited redistribution and modification is allowed provided that the above
copyright notice and this permission notice remains intact.

## The `batch` client capability

This extension describes a capability which causes a new verb to be sent to
clients when the IRC server wishes to designate that a series of events are
related to each other.

Use-cases include visual suppression of netsplits and netjoins. 

The name of this client capability MUST be named `batch`.

## The `BATCH` verb

The IRC server will send a `BATCH` verb when it wants the client to begin
batching events together, and send another `BATCH` verb when the transaction
is concluded.

The following syntax MUST be used when starting a batch:

	BATCH +reference-tag type [<parameter 1> [<parameter 2> ... [<parameter n>]]]

The following syntax MUST be used when ending a batch:

	BATCH -reference-tag

The reference tag MUST be treated as an opaque identifier.
Reference tag MUST contain only ASCII letters, numbers, and/or hyphen, and MUST be case-sensitive.

The `type` parameter indicates how messages are associated. The meaning of the
additional parameters (if any) depend on the type.

The batched events MUST use `batch` message tag refering to the batch's reference tag.

The `BATCH` verb may itself carry a `batch` tag, indicating that this batch is contained within the one
indicated by the tag. Only one tag may be used with the `batch` tag, and an inner tag automatically
implies all tags outer to itself.

If a client receives the end of a batch without receiving the end of any batches it contains, it MUST
consider those inner batches to implicitly be closed. If subsequent events or batch ends are received
tagged as belonging to a batch that isn't currently open, the tagging or end should be ignored.

Client SHOULD start processing the batched events only when they have received the end of the batch.

An empty batch is allowed, and SHOULD be treated as a no-op, unless demanded otherwise
by the specification for that batch type.
 
## Specifications for batch types

Batch types are specified by IRCv3 extensions, vendor-specific types MUST be
prefixed the same way as how vendor-specific capabilities are prefixed.
See [capability negotiation](/specification/capability-negotiation-3.1) for the
exact details.

While batch types are similiar to capabilities in this aspect, unlike
capabilities, batch types are not advertised by servers nor explicitly
requested by clients.

To submit a new batch type please follow the extension submission procedure
[found here](/index).

 * [IRC Version 3.2: `NETSPLIT` and `NETJOIN`](/extensions/batch/netsplit)
